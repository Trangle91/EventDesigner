SEIS 635 Final Project Readme

Included:
All source code
All tests
A Word document with the final report
Presentation Slides

Overview
ReceptionBuilder seeks to connect clients to decor choices that match their personal style and budget to a florist that can provide the client's unique vision to their event.
Florists who use ReceptionBuilder agree to provide the decor choices for the listed prices, though the florists are allowed to set fees and minimum budgets they will work with. 
ReceptionBuilder also calculates the number of each type of client selected design required based on the table count of the event and gives the client an estimated total for the event for different florists.

Code Style
standard

Features
ReceptionBuilder displays the images of the potential designs, saves the client's event, saves the client information, displays florists that are within a client's budget, and calculates the total estimated cost of the event.

Design
ReceptionBuilder uses the follow design patterns.

Factory Builder (Item 2) from Effective Java by Joshua Bloch to create an event that has multiple optional fields. 
MVC to better facilitate the addition of a GUI at a later date (January 2019).
Low coupling to our best abilities. We really tried to make our classes as loosely dependent on each other as possible. 
There are some instances where this worked well and some where they did not. An area I'd to work would be the area with ClientEvent and 
the method floristOptions. 
I'm not a big fan of having to create a dummy florist controller in the main method in order to be able to use that method. 
An area where I think it works well is Client and ClientEvent. The two classes aren't coupled at all. They are only connected by a HashMap with a unique key.
Enum Singletons from Effective Java by Joshua Bloch. Our arrangements are consistent across all of the florists, clients and events. 
An Alternative way to do this might have been to create an Arrangement class with subtypes of each arrangement and create a constant 
reference. 



How to Run
ReceptionBuilder currently runs from the console with windows popping up to display the types of arrangements. 
Client Template
Name: Jane Doe
Partner Name: John
Phone Number: 555-555-5555

Event Template
Event Date: 05-05-2019
Budget: 3,000
Table Count: 35
Guest Count: 350
Event Theme: Easy Elegance
Color Palette: White and Gold

Tests
There is a branch in the repository labeled as TestBranch. This branch has all of the appropriate modifiers needed to run the tests. 
The project attempted to use TDD in the ClientEvent, Client, and the Enum Arrangement classes. 

Test Coverage (by Class)
ClientEventMapKey- 88.2%
ClientEventBuilder - 100%
SmallFloralRing - 100.0%
LargeFloralRing - 100.0%
LowFloral - 100%
VotiveArrangement - 100.00%
TallAnchorArrangement - 97.3%
Client - 82.1%
Florist - 97.0%
ClientEvent - 80.9%


Contributions
Sarah created the Client, ClientEvent, and the Arrangement Enums. Trang worked on the Florist and Florist related classes. Russel worked on the Mainview and Reports. 

Special Thanks
Mary Eccher of Designs by Mary Eccher - a 3912 Corporation for the use of the images and her event planing and design expertise.






